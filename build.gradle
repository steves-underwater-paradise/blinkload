//file:noinspection GroovyAccessibility
//file:noinspection GroovyAssignabilityCheck

plugins {
    id "architectury-plugin" version "${architectury_plugin_version}"
    id "dev.architectury.loom" version "${architectury_loom_version}" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = "${rootProject.mod_version}+mc${rootProject.supported_minecraft_version_name}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            name = "NeoForged"
            url = "https://maven.neoforged.net/releases/"
        }
        maven {
            name "Xander Maven"
            url "https://maven.isxander.dev/releases"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = "${rootProject.java_version}" as int
    }

    java {
        withSourcesJar()
    }

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${rootProject.mod_namespace}" }
        }
    }
}

// Clean the previous build output of the root project and all subprojects before building
tasks.named("build") {
    dependsOn(clean, subprojects.clean)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = rootProject.maven_group
            artifactId = rootProject.mod_id
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/steves-underwater-paradise/${rootProject.mod_id}")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
